package org.wso2.internalapps.pqd;

const string CONFIGURATION_PATH = "config.json";

const string JIRA_PATH = "/rest/api/2/search";

string[] months = ["January", "February", "March", "April", "May","June", "July", "August", "September", "October", "November","December"];

const string GET_YET_TO_START_PATCH_COUNTS = "select count(*) as qtotal  from (SELECT PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE
                                                FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                UNION ALL select PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t";

const string GET_COMPLETED_PATCH_COUNTS = "select count(distinct(PATCH_ETA.PATCH_NAME)) as ctotal from PATCH_ETA join PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID where
                                            PATCH_QUEUE.ACTIVE=? AND PATCH_ETA.STATUS=1  AND ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released'))";

const string PARTIALLY_COMPLETED_PATCH_COUNTS = "select count(distinct(PATCH_ETA.PATCH_NAME)) as ctotal  from PATCH_ETA join PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID where
                                                PATCH_QUEUE.ACTIVE=? AND PATCH_ETA.STATUS=1  AND ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated'))";

const string GET_IN_PROGRESS_PATCH_COUNTS = "select count(*) as devtotal from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                            WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                            AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                            OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                             (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))";

const string GET_OVER_ETA_PATCH_COUNTS = "select count(*) as etatotal from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                            WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                            AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                            OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                             (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?))) AND PATCH_ETA.WORST_CASE_ESTIMATE<?";

const string GET_ALL_PRODUCTS = "SELECT distinct(PRODUCT_NAME) as products from PATCH_QUEUE WHERE PRODUCT_NAME !=? AND (ACTIVE=? or ACTIVE=?) ORDER BY PRODUCT_NAME ASC";

const string GET_ALL_VERSIONS = "SELECT distinct(PRODUCT_VERSION) as VERSION, PRODUCT_NAME FROM PATCH_QUEUE ORDER BY PRODUCT_NAME ASC, PRODUCT_VERSION";

const string GET_REACTIVE_PATCH_COUNTS = "SELECT count(PATCH_QUEUE.SUPPORT_JIRA) as total FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_QUEUE.ID = PATCH_ETA.PATCH_QUEUE_ID  WHERE (PATCH_QUEUE.SUPPORT_JIRA NOT LIKE '%/DEVINTERNAL-%'
                                            AND PATCH_QUEUE.SUPPORT_JIRA NOT LIKE '%/SECURITYINTERNAL-%') AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?)
                                            AND (PATCH_ETA.LC_STATE NOT IN ('OnHold','Broken','N/A')) AND PATCH_QUEUE.REPORT_DATE >=? AND PATCH_QUEUE.REPORT_DATE <=?";

const string GET_PROACTIVE_PATCH_COUNTS = "SELECT COUNT(SUPPORT_JIRA) as total FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_QUEUE.ID = PATCH_ETA.PATCH_QUEUE_ID  WHERE SUPPORT_JIRA LIKE '%/DEVINTERNAL-%'
                                              AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND (PATCH_ETA.LC_STATE NOT IN ('OnHold','Broken','N/A')) AND REPORT_DATE >= ? AND REPORT_DATE <= ?";

const string GET_SECURITY_INTERNAL_PATCHES = "SELECT distinct(SUPPORT_JIRA), count(SUPPORT_JIRA) as COUNT FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_QUEUE.ID = PATCH_ETA.PATCH_QUEUE_ID  WHERE SUPPORT_JIRA LIKE '%/SECURITYINTERNAL-%'
                                              AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND (PATCH_ETA.LC_STATE NOT IN ('OnHold','Broken','N/A')) AND REPORT_DATE >= ? AND REPORT_DATE <= ? group by SUPPORT_JIRA";

const string GET_YET_TO_START_PATCH_DETAILS = "select SUPPORT_JIRA,PRODUCT_NAME,PRODUCT_VERSION,CLIENT,REPORTER,ASSIGNED_TO,REPORT_DATE  from (SELECT SUPPORT_JIRA,PRODUCT_NAME,PRODUCT_VERSION,CLIENT,REPORTER,ASSIGNED_TO,REPORT_DATE
                                            FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                            UNION ALL select SUPPORT_JIRA,PRODUCT_NAME,PRODUCT_VERSION,CLIENT,REPORTER,ASSIGNED_TO,REPORT_DATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                            AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t";

const string GET_IN_PROGRESS_PATCH_DETAILS = "select PATCH_QUEUE.SUPPORT_JIRA,PATCH_ETA.PATCH_NAME,PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.CLIENT,PATCH_ETA.DEVELOPED_BY,PATCH_QUEUE.ASSIGNED_TO,PATCH_QUEUE.REPORT_DATE,PATCH_ETA.WORST_CASE_ESTIMATE from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                            WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                            AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                            OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                             (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))";

const string GET_COMPLETED_PATCH_DETAILS = "select PATCH_QUEUE.SUPPORT_JIRA,PATCH_ETA.PATCH_NAME,PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.CLIENT,PATCH_ETA.DEVELOPED_BY,PATCH_QUEUE.ASSIGNED_TO,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE from
                                            PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE=? AND
                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released')";

const string REPORTED_PATCH_DAY_BASIS = "SELECT count(day(PATCH_QUEUE.REPORT_DATE)) as COUNTS,day(REPORT_DATE) as TYPE,MONTH(REPORT_DATE) AS MONTH,QUARTER(REPORT_DATE) AS QUARTER, YEAR(REPORT_DATE) AS YEAR
                                        FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE=? OR PATCH_QUEUE.ACTIVE=?) AND PATCH_QUEUE.REPORT_DATE >=?
                                        AND PATCH_QUEUE.REPORT_DATE <= ? GROUP BY day(PATCH_QUEUE.REPORT_DATE),MONTH(REPORT_DATE),QUARTER(REPORT_DATE),YEAR(PATCH_QUEUE.REPORT_DATE)
                                        order by YEAR,MONTH,QUARTER,TYPE";

const string REPORTED_PATCH_WEEK_BASIS = "SELECT count(week(PATCH_QUEUE.REPORT_DATE)) as COUNTS,week(REPORT_DATE) as TYPE, YEAR(REPORT_DATE) AS YEAR
                                        FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE=? OR PATCH_QUEUE.ACTIVE=?) AND PATCH_QUEUE.REPORT_DATE >=?
                                        AND PATCH_QUEUE.REPORT_DATE <= ? GROUP BY week(PATCH_QUEUE.REPORT_DATE),YEAR(PATCH_QUEUE.REPORT_DATE)
                                        order by YEAR,TYPE";

const string REPORTED_PATCH_MONTH_BASIS = "SELECT count(month(PATCH_QUEUE.REPORT_DATE)) as COUNTS,month(REPORT_DATE) as TYPE,MONTH(REPORT_DATE) AS MONTH,QUARTER(REPORT_DATE) AS QUARTER, YEAR(REPORT_DATE) AS YEAR
                                        FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE=? OR PATCH_QUEUE.ACTIVE=?) AND PATCH_QUEUE.REPORT_DATE >=?
                                        AND PATCH_QUEUE.REPORT_DATE <= ? GROUP BY month(PATCH_QUEUE.REPORT_DATE),MONTH(REPORT_DATE),QUARTER(REPORT_DATE),YEAR(PATCH_QUEUE.REPORT_DATE)
                                        order by YEAR,MONTH,QUARTER,TYPE";

const string REPORTED_PATCH_QUARTER_BASIS = "SELECT count(quarter(PATCH_QUEUE.REPORT_DATE)) as COUNTS,quarter(REPORT_DATE) as TYPE, YEAR(REPORT_DATE) AS YEAR
                                        FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE=? OR PATCH_QUEUE.ACTIVE=?) AND PATCH_QUEUE.REPORT_DATE >=?
                                        AND PATCH_QUEUE.REPORT_DATE <= ? GROUP BY quarter(PATCH_QUEUE.REPORT_DATE),YEAR(PATCH_QUEUE.REPORT_DATE)
                                        order by YEAR,TYPE";

const string REPORTED_PATCH_YEAR_BASIS = "SELECT count(year(PATCH_QUEUE.REPORT_DATE)) as COUNTS,year(REPORT_DATE) as TYPE, YEAR(REPORT_DATE) AS YEAR
                                        FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE=? OR PATCH_QUEUE.ACTIVE=?) AND PATCH_QUEUE.REPORT_DATE >=?
                                        AND PATCH_QUEUE.REPORT_DATE <= ? GROUP BY year(PATCH_QUEUE.REPORT_DATE),YEAR(PATCH_QUEUE.REPORT_DATE)
                                        order by YEAR,TYPE";

const string REPORTED_PATCH_PRODUCT_WISE_DAY_BASIS = "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) AS total, PATCH_QUEUE.PRODUCT_NAME FROM PATCH_QUEUE WHERE day(PATCH_QUEUE.REPORT_DATE) = ?
                                            AND MONTH(PATCH_QUEUE.REPORT_DATE)= ? AND QUARTER(PATCH_QUEUE.REPORT_DATE)= ? AND YEAR(PATCH_QUEUE.REPORT_DATE)= ? AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND
                                            PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            GROUP BY PATCH_QUEUE.PRODUCT_NAME ORDER BY COUNT(PATCH_QUEUE.PRODUCT_NAME) DESC";

const string REPORTED_PATCH_PRODUCT_WISE_MONTH_BASIS = "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) AS total, PATCH_QUEUE.PRODUCT_NAME FROM PATCH_QUEUE WHERE month(PATCH_QUEUE.REPORT_DATE) = ?
                                            AND MONTH(PATCH_QUEUE.REPORT_DATE)= ? AND QUARTER(PATCH_QUEUE.REPORT_DATE)= ? AND YEAR(PATCH_QUEUE.REPORT_DATE)= ? AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND
                                            PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            GROUP BY PATCH_QUEUE.PRODUCT_NAME ORDER BY COUNT(PATCH_QUEUE.PRODUCT_NAME) DESC";

const string  REPORTED_PATCH_PRODUCT_WISE_WEEK_BASIS= "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) AS total, PATCH_QUEUE.PRODUCT_NAME FROM PATCH_QUEUE WHERE week(PATCH_QUEUE.REPORT_DATE) = ?
                                            AND YEAR(PATCH_QUEUE.REPORT_DATE)= ? AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND
                                            PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            GROUP BY PATCH_QUEUE.PRODUCT_NAME ORDER BY COUNT(PATCH_QUEUE.PRODUCT_NAME) DESC";

const string  REPORTED_PATCH_PRODUCT_WISE_QUARTER_BASIS= "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) AS total, PATCH_QUEUE.PRODUCT_NAME FROM PATCH_QUEUE WHERE quarter(PATCH_QUEUE.REPORT_DATE) = ?
                                            AND YEAR(PATCH_QUEUE.REPORT_DATE)= ? AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND
                                            PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            GROUP BY PATCH_QUEUE.PRODUCT_NAME ORDER BY COUNT(PATCH_QUEUE.PRODUCT_NAME) DESC";

const string  REPORTED_PATCH_PRODUCT_WISE_YEAR_BASIS= "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) AS total, PATCH_QUEUE.PRODUCT_NAME FROM PATCH_QUEUE WHERE year(PATCH_QUEUE.REPORT_DATE) = ?
                                            AND YEAR(PATCH_QUEUE.REPORT_DATE)= ? AND (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?) AND
                                            PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            GROUP BY PATCH_QUEUE.PRODUCT_NAME ORDER BY COUNT(PATCH_QUEUE.PRODUCT_NAME) DESC";

const string GET_FIRST_DATE_OF_WEEK = "select DATE_SUB(DATE_ADD(MAKEDATE((year(PATCH_QUEUE.REPORT_DATE)), 1), INTERVAL (week(PATCH_QUEUE.REPORT_DATE)) WEEK),
                                          INTERVAL WEEKDAY(DATE_ADD(MAKEDATE((year(PATCH_QUEUE.REPORT_DATE)), 1), INTERVAL (week(PATCH_QUEUE.REPORT_DATE)) WEEK)
                                        ) -1 DAY) as FIRSTWEEK FROM PATCH_QUEUE WHERE PATCH_QUEUE.REPORT_DATE >=? AND PATCH_QUEUE.REPORT_DATE <= ?  GROUP BY FIRSTWEEK";

const string PRODUCT_WISE_YET_TO_START_COUNT = "select PRODUCT_NAME, SUM(total) as total from ( select total,PRODUCT_NAME  from (SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) as total,PATCH_QUEUE.PRODUCT_NAME
                                            FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')  group by PATCH_QUEUE.PRODUCT_NAME
                                            UNION ALL select COUNT(PATCH_QUEUE.PRODUCT_NAME) as total,PATCH_QUEUE.PRODUCT_NAME FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                            AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?  group by PATCH_QUEUE.PRODUCT_NAME) as t) as y group by PRODUCT_NAME";

const string PRODUCT_WISE_OVER_ETA_COUNT = "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) as total,PATCH_QUEUE.PRODUCT_NAME from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                                AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                 (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?))) AND PATCH_ETA.WORST_CASE_ESTIMATE< ? group by PATCH_QUEUE.PRODUCT_NAME";

const string PRODUCT_WISE_IN_PROGRESS_COUNT = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) as total,PATCH_QUEUE.PRODUCT_NAME from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                            WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                            AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                            OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                             (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?))) group by PATCH_QUEUE.PRODUCT_NAME";

const string VERSION_WISE_YET_TO_START_COUNT = "select PRODUCT_NAME, SUM(total) as total,PRODUCT_VERSION from ( select total,PRODUCT_NAME,PRODUCT_VERSION  from (SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) as total,PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION
                                                FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')  group by PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION
                                                UNION ALL select COUNT(PATCH_QUEUE.PRODUCT_NAME) as total,PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?  group by PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION) as t) as y group by PRODUCT_NAME,PRODUCT_VERSION";

const string VERSION_WISE_OVER_ETA_COUNT = "SELECT COUNT(PATCH_QUEUE.PRODUCT_NAME) as total,PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                                AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                 (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?))) AND PATCH_ETA.WORST_CASE_ESTIMATE< ? group by PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION";

const string VERSION_WISE_IN_PROGRESS_COUNT = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) as total,PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                            WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                            AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                            OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                             (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?))) group by PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION";

const string SPECIFIC_PRODUCT_BUG_COUNT = "SELECT count(ISSUE_TYPE) as bugs FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?)
                                            AND PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.ISSUE_TYPE=? AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?";

const string SPECIFIC_PRODUCT_YET_TO_START_COUNT = "select count(*) as total  from (SELECT PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE
                                                    FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                    AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                    UNION ALL select PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE  PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_QUEUE.ACTIVE = ?
                                                    AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t";

const string SPECIFIC_PRODUCT_COMPLETED_COUNT = "select count(distinct(PATCH_ETA.PATCH_NAME)) as total from PATCH_ETA JOIN PATCH_QUEUE ON PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID
                                                where PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND PATCH_QUEUE.PRODUCT_NAME=? AND
                                                ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released'))";

const string SPECIFIC_PRODUCT_IN_PROGRESS_COUNT = "select count(*) as total from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                                AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                 (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))";

const string SPECIFIC_PRODUCT_PARTIALLY_COMPLETED_COUNT = "select count(distinct(PATCH_ETA.PATCH_NAME)) as total from PATCH_ETA JOIN PATCH_QUEUE ON PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID
                                                where PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND PATCH_QUEUE.PRODUCT_NAME=? AND
                                                ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated'))";

const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=  ?) OR
                                                        (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=  ?) OR
                                                        (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";


const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR,MONTH order by year,month,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR,MONTH order by year,month,type";


const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No'
                                                                         AND ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR,MONTH order by year,month,type";


const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                                ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                                (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                                (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                                date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <=?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND ((date(PATCH_ETA.RELEASED_ON) >= ?
                                                                        AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";

const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND ((date(PATCH_ETA.RELEASED_ON) >= ?
                                                                        AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";

const string GET_RELEASED_WEEK_FIRST_DATE = "select DATE_SUB(DATE_ADD(MAKEDATE((case when date(PATCH_ETA.RELEASED_ON) IS NOT NULL THEN year(date(PATCH_ETA.RELEASED_ON)) when date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) IS NOT NULL then year(date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON))
                                            when date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) IS NOT NULL THEN  year(date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)) END), 1), INTERVAL (case when date(PATCH_ETA.RELEASED_ON) IS NOT NULL THEN week(date(PATCH_ETA.RELEASED_ON)) when date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) IS NOT NULL then week(date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON))
                                            when date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) IS NOT NULL THEN  week(date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)) END) WEEK),
                                            INTERVAL WEEKDAY(DATE_ADD(MAKEDATE((case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(date(PATCH_ETA.RELEASED_ON)) when date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) IS NOT NULL then year(date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON))
                                            when date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) IS NOT NULL THEN  year(date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)) END), 1), INTERVAL (case when date(PATCH_ETA.RELEASED_ON) IS NOT NULL THEN week(date(PATCH_ETA.RELEASED_ON)) when date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) IS NOT NULL then week(date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON))
                                            when date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) IS NOT NULL THEN  week(date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)) END) WEEK)
                                            ) -1 DAY) as FIRSTWEEK FROM PATCH_ETA WHERE  (case when date(PATCH_ETA.RELEASED_ON) IS NOT NULL THEN (date(PATCH_ETA.RELEASED_ON) >=? AND date(PATCH_ETA.RELEASED_ON) <= ?)
                                             when date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) IS NOT NULL THEN (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >=? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?)
                                            when date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) IS NOT NULL THEN (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) END) GROUP BY FIRSTWEEK";

const string SPECIFIC_PRODUCT_VERSION_BUG_COUNT ="SELECT count(ISSUE_TYPE) as bugs FROM PATCH_QUEUE WHERE (PATCH_QUEUE.ACTIVE = ? OR PATCH_QUEUE.ACTIVE = ?)
                                            AND PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_QUEUE.ISSUE_TYPE=? AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?";

const string SPECIFIC_PRODUCT_VERSION_YET_TO_START_COUNT ="select count(*) as total  from (SELECT PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE
                                            FROM PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                            AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                            UNION ALL select PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE  PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_QUEUE.ACTIVE = ?
                                            AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t";

const string SPECIFIC_PRODUCT_VERSION_COMPLETED_COUNT ="select count(distinct(PATCH_ETA.PATCH_NAME)) as total from PATCH_ETA JOIN PATCH_QUEUE ON PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID
                                            where PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND
                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released'))";

const string SPECIFIC_PRODUCT_VERSION_IN_PROGRESS_COUNT ="select count(*) as total from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                WHERE PATCH_QUEUE.PRODUCT_NAME=? AND  PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND ((PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL
                                                AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                 (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))";

const string SPECIFIC_PRODUCT_VERSION_PARTIALLY_COMPLETED_COUNT = "select count(distinct(PATCH_ETA.PATCH_NAME)) as total from PATCH_ETA JOIN PATCH_QUEUE ON PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID
                                            where PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND
                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated'))";

const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=  ?) OR
                                                        (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=  ?) OR
                                                        (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";


const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR,MONTH order by year,month,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR,MONTH order by year,month,type";


const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No'
                                                                         AND ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR,MONTH order by year,month,type";


const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                                ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                                (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                                (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                                date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <=?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND ((date(PATCH_ETA.RELEASED_ON) >= ?
                                                                        AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";

const string ALL_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_TOTAL_PRODUCT_VERSION_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND ((date(PATCH_ETA.RELEASED_ON) >= ?
                                                                        AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";

const string ALL_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=  ?) OR
                                                        (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=  ?) OR
                                                        (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_WEEK = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";


const string ALL_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR,MONTH order by year,month,type";

const string COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR,MONTH order by year,month,type";


const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_MONTH = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No'
                                                                         AND ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR,MONTH order by year,month,type";


const string ALL_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                                ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                                (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                                (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                                date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <=?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_QUARTER = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND ((date(PATCH_ETA.RELEASED_ON) >= ?
                                                                        AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";

const string ALL_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND  PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR
                                                            (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?)) AND (PATCH_ETA.LC_STATE IN ('Released')) GROUP BY TYPE,YEAR order by year,type";

const string PARTIALLY_COMPLETE_RELEASE_TREND_OF_ALL_PRODUCT_VERSION_YEAR = "select COUNT(distinct(PATCH_ETA.PATCH_NAME)) AS total,  case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME=? AND PATCH_QUEUE.PRODUCT_VERSION=? AND PATCH_ETA.STATUS=? AND  PATCH_QUEUE.ACTIVE='No' AND ((date(PATCH_ETA.RELEASED_ON) >= ?
                                                                        AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >=? AND
                                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND (PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated')) GROUP BY TYPE,YEAR order by year,type";

const string RELEASE_TREND_OF_ALL_PRODUCT_CATEGORY_WEEK = "select case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN week(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then week(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  week(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string RELEASE_TREND_OF_ALL_PRODUCT_CATEGORY_MONTH = "select case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR,case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN month(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then month(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  month(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS MONTH from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR,MONTH order by year,month,type";

const string RELEASE_TREND_OF_ALL_PRODUCT_CATEGORY_QUARTER = "select case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN quarter(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then quarter(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  quarter(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                            when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                            ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                            date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string RELEASE_TREND_OF_ALL_PRODUCT_CATEGORY_YEAR = "select case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS TYPE, case when PATCH_ETA.RELEASED_ON IS NOT NULL THEN year(PATCH_ETA.RELEASED_ON) when PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NOT NULL then year(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)
                                                        when PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NOT NULL THEN  year(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) END AS YEAR from PATCH_ETA JOIN PATCH_QUEUE on PATCH_QUEUE.ID=PATCH_ETA.PATCH_QUEUE_ID WHERE  PATCH_QUEUE.PRODUCT_NAME = ? AND PATCH_ETA.STATUS=? AND PATCH_QUEUE.ACTIVE='No' AND
                                                        ((date(PATCH_ETA.RELEASED_ON) >= ? AND date(PATCH_ETA.RELEASED_ON) <=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON) <= ?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) >= ? AND
                                                        date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON) <= ?) ) AND PATCH_ETA.LC_STATE IN ('ReleasedNotInPublicSVN','ReleasedNotAutomated','Released') GROUP BY TYPE,YEAR order by year,type";

const string GET_ALL_PATCHES_FOR_QUEUED_AGE_GRAPH_GIVEN_TIME_GAP = "select REPORT_DATE  from (SELECT PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE FROM PATCH_QUEUE JOIN
                                                        PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                        AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                        UNION ALL select PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                        AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.REPORT_DATE from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                        WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                        (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                        PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                        OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                         (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))";

const string ALL_PRODUCTS_OF_NOT_MORE_THAN_90_DAYS_QUEUED = "select PRODUCT_NAME,count(REPORT_DATE) as AGE from (select PRODUCT_NAME,REPORT_DATE  from (SELECT PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE FROM PATCH_QUEUE JOIN
                                                        PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                        AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                        UNION ALL select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                        AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.REPORT_DATE from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                        WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                        (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                        PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                        OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                         (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))) as y where
                                                         datediff(?,REPORT_DATE) < ? and datediff(?,REPORT_DATE) >= ? group by PRODUCT_NAME";

const string ALL_PRODUCTS_VERSIONS_OF_NOT_MORE_THAN_90_DAYS_QUEUED = "select PRODUCT_NAME,PRODUCT_VERSION,count(REPORT_DATE) as AGE from (select PRODUCT_NAME,PRODUCT_VERSION,REPORT_DATE  from (SELECT PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE FROM PATCH_QUEUE JOIN
                                                        PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                        AND (PATCH_QUEUE.ACTIVE =? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                        UNION ALL select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                        AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.REPORT_DATE from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                        WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                        (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                        PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                        OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                         (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))) as y where
                                                         datediff(?,REPORT_DATE) < ? and datediff(?,REPORT_DATE) >= ? group by PRODUCT_NAME,PRODUCT_VERSION";

const string ALL_PRODUCTS_OF_MORE_THAN_90_DAYS_QUEUED = "select PRODUCT_NAME,count(REPORT_DATE) as AGE from (select PRODUCT_NAME,REPORT_DATE  from (SELECT PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE FROM PATCH_QUEUE JOIN
                                                        PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                        AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                        UNION ALL select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                        AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.REPORT_DATE from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                        WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                        (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                        PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                        OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                         (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))) as y where
                                                         datediff(?,REPORT_DATE) >= ? group by PRODUCT_NAME";

const string ALL_PRODUCTS_VERSIONS_OF_MORE_THAN_90_DAYS_QUEUED = "select PRODUCT_NAME,PRODUCT_VERSION,count(REPORT_DATE) as AGE from (select PRODUCT_NAME,PRODUCT_VERSION,REPORT_DATE  from (SELECT PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.LC_STATE FROM PATCH_QUEUE JOIN
                                                        PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?
                                                        AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                        UNION ALL select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.ID,PATCH_QUEUE.REPORT_DATE, PATCH_QUEUE.ACTIVE,null as DEVELOPMENT_STARTED_ON, null as LC_STATE FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                        AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.PRODUCT_NAME,PATCH_QUEUE.PRODUCT_VERSION,PATCH_QUEUE.REPORT_DATE from PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID
                                                        WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                        (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                        PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                        OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                         (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))) as y where
                                                        datediff(?,REPORT_DATE) >= ? group by PRODUCT_NAME,PRODUCT_VERSION";

const string GET_ALL_PATCH_DATA_IN_GIVEN_DATE_RANGE = "select distinct(ID),eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON from(select ID,eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON  from
                                                    (SELECT PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?
                                                    AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                    UNION ALL select PATCH_QUEUE.ID,null as eID,null as LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,null as PRE_QA_STARTED_ON,null as DEVELOPMENT_STARTED_ON,null as QA_STARTED_ON,null as RELEASED_NOT_IN_PUBLIC_SVN_ON,null as RELEASED_NOT_AUTOMATED_ON,null as RELEASED_ON,null as BROKEN_ON,null as REGRESSION_ON FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                    AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                    (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                    PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                    OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                     (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))
                                                     UNION all select PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ACTIVE = 'No' AND PATCH_ETA.STATUS = 1 AND (date(PATCH_ETA.RELEASED_ON)>=? AND date(PATCH_ETA.RELEASED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)<=?) AND PATCH_ETA.LC_STATE IN ('ReleasedNotAutomated','ReleasedNotInPublicSVN','Released')) as x
                                                     group by ID,eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON";

const string FETCH_ALL_PRODUCTS_FOR_LIFE_CYCLE_GIVEN_DATE_RANGE = "select distinct(PRODUCT_NAME) FROM ( select REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON  from
                                                    (SELECT PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?
                                                    AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                    UNION ALL select PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,null as PRE_QA_STARTED_ON,null as DEVELOPMENT_STARTED_ON,null as QA_STARTED_ON,null as RELEASED_NOT_IN_PUBLIC_SVN_ON,null as RELEASED_NOT_AUTOMATED_ON,null as RELEASED_ON,null as BROKEN_ON,null as REGRESSION_ON FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                    AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                    (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                    PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                    OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                     (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))
                                                     UNION all select PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ACTIVE = 'No' AND PATCH_ETA.STATUS = 1 AND (date(PATCH_ETA.RELEASED_ON)>=? AND date(PATCH_ETA.RELEASED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)<=?) AND PATCH_ETA.LC_STATE IN ('ReleasedNotAutomated','ReleasedNotInPublicSVN','Released')) as z";

const string FETCH_ALL_PATCH_DATA_FOR_DROP_DOWN_SELECTION = "select distinct(ID),eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON from(select ID,eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON  from
                                                    (SELECT PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?
                                                    AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                    UNION ALL select PATCH_QUEUE.ID,null as eID,null as LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,null as PRE_QA_STARTED_ON,null as DEVELOPMENT_STARTED_ON,null as QA_STARTED_ON,null as RELEASED_NOT_IN_PUBLIC_SVN_ON,null as RELEASED_NOT_AUTOMATED_ON,null as RELEASED_ON,null as BROKEN_ON,null as REGRESSION_ON FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                    AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                    (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                    PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                    OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                     (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))
                                                     UNION all select PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ACTIVE = 'No' AND PATCH_ETA.STATUS = 1 AND (date(PATCH_ETA.RELEASED_ON)>=? AND date(PATCH_ETA.RELEASED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)<=?) AND PATCH_ETA.LC_STATE IN ('ReleasedNotAutomated','ReleasedNotInPublicSVN','Released'))
                                                     as x group by ID,eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON";

const string FETCH_ALL_PRODUCTS_DATA_FOR_DROP_DOWN_SELECTION = "select distinct(PRODUCT_NAME) FROM ( select REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON  from
                                                    (SELECT PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?
                                                    AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                    UNION ALL select PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,null as PRE_QA_STARTED_ON,null as DEVELOPMENT_STARTED_ON,null as QA_STARTED_ON,null as RELEASED_NOT_IN_PUBLIC_SVN_ON,null as RELEASED_NOT_AUTOMATED_ON,null as RELEASED_ON,null as BROKEN_ON,null as REGRESSION_ON FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                    AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                    (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                    PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                    OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                     (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))
                                                     UNION all select PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ACTIVE = 'No' AND PATCH_ETA.STATUS = 1 AND (date(PATCH_ETA.RELEASED_ON)>=? AND date(PATCH_ETA.RELEASED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)<=?) AND PATCH_ETA.LC_STATE IN ('ReleasedNotAutomated','ReleasedNotInPublicSVN','Released')) as z";

const string FETCH_REQUIRED_PRODUCT_PATCH_DATA_FOR_DROP_DOWN_SELECTION = "select distinct(ID),eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON from(select ID,eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON  from
                                                    (SELECT PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <=?
                                                    AND (PATCH_QUEUE.ACTIVE = ? AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) > ?) AND  PATCH_ETA.LC_STATE NOT IN ('Broken','OnHold','N/A')
                                                    UNION ALL select PATCH_QUEUE.ID,null as eID,null as LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,null as PRE_QA_STARTED_ON,null as DEVELOPMENT_STARTED_ON,null as QA_STARTED_ON,null as RELEASED_NOT_IN_PUBLIC_SVN_ON,null as RELEASED_NOT_AUTOMATED_ON,null as RELEASED_ON,null as BROKEN_ON,null as REGRESSION_ON FROM PATCH_QUEUE WHERE PATCH_QUEUE.ACTIVE = ?
                                                    AND PATCH_QUEUE.REPORT_DATE >= ? AND PATCH_QUEUE.REPORT_DATE <= ?) as t union all select PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.REPORT_DATE>=? AND PATCH_QUEUE.REPORT_DATE<=? AND (
                                                    (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.RELEASED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_AUTOMATED_ON IS NULL AND PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON IS NULL AND
                                                    PATCH_ETA.LC_STATE NOT IN ('Broken','Released' ,'ReleasedNotInPublicSVN', 'ReleasedNotAutomated','OnHold','N/A'))
                                                    OR (PATCH_QUEUE.ACTIVE = ? AND PATCH_ETA.STATUS=? AND PATCH_ETA.LC_STATE NOT IN ('OnHold' , 'Broken', 'N/A') AND date(PATCH_ETA.DEVELOPMENT_STARTED_ON) < ? AND
                                                     (date(PATCH_ETA.RELEASED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>? OR date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>?)))
                                                     UNION all select PATCH_QUEUE.ID,PATCH_ETA.ID as eID,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON from
                                                     PATCH_QUEUE JOIN PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ACTIVE = 'No' AND PATCH_ETA.STATUS = 1 AND (date(PATCH_ETA.RELEASED_ON)>=? AND date(PATCH_ETA.RELEASED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_AUTOMATED_ON)<=?) OR (date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)>=? AND date(PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON)<=?)  AND PATCH_ETA.LC_STATE IN ('ReleasedNotAutomated','ReleasedNotInPublicSVN','Released') )
                                                     as x WHERE PRODUCT_NAME = ?  group by ID,eID,LC_STATE,REPORT_DATE,PRODUCT_NAME,PRE_QA_STARTED_ON,DEVELOPMENT_STARTED_ON,QA_STARTED_ON,RELEASED_NOT_IN_PUBLIC_SVN_ON,RELEASED_NOT_AUTOMATED_ON,RELEASED_ON,BROKEN_ON,REGRESSION_ON";

const string PATCH_DETAILS_OF_EID_NOT_EQUAL_TO_ZERO = "SELECT PATCH_ETA.PATCH_NAME,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE LEFT OUTER JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ID=? AND PATCH_ETA.ID=?";

const string PATCH_DETAILS_OF_EID_EQUAL_TO_ZERO = "SELECT PATCH_ETA.PATCH_NAME,PATCH_ETA.LC_STATE,PATCH_QUEUE.REPORT_DATE,PATCH_QUEUE.PRODUCT_NAME,PATCH_ETA.PRE_QA_STARTED_ON,PATCH_ETA.DEVELOPMENT_STARTED_ON,PATCH_ETA.QA_STARTED_ON,PATCH_ETA.RELEASED_NOT_IN_PUBLIC_SVN_ON,PATCH_ETA.RELEASED_NOT_AUTOMATED_ON,PATCH_ETA.RELEASED_ON,PATCH_ETA.BROKEN_ON,PATCH_ETA.REGRESSION_ON FROM PATCH_QUEUE LEFT OUTER JOIN
                                                    PATCH_ETA ON PATCH_ETA.PATCH_QUEUE_ID = PATCH_QUEUE.ID WHERE PATCH_QUEUE.ID=? ";


